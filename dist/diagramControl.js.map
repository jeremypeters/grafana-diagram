{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","mode","mermaidServiceUrl","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","error","errorText","initializeMermaid","setupScrollToPanel","mermaidAPI","initialize","parseError","handleParseError","scrollToPanel","$panelTitle","$","filter","index","$scrollCanvas","newScrollTopPosition","trustAsHtml","$apply","setTimeout","offset","top","animate","scrollTop","window","err","hash","addEditorTab","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","metricName","replacedText","replace","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","updateDiagram_cont","_this","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","clearDiagram","templatedURL","scopedVars","method","url","then","successCallback","response","call","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","name","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","nameOfMetric","getWorstSeries","series1","series2","worstSeries","series1thresholdLevel","getThresholdLevel","series2thresholdLevel","log","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","isNumber","delta","dec","floor","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","key","targetElement","d3","select","selectAll","style","div","fo","attr","classed","parents","edgeElement","parent","addClass","dElement","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { diagramEditor, displayEditor, compositeEditor } from './properties';\nimport _ from 'lodash';\nimport './series_overrides_diagram_ctrl';\nimport './css/diagram.css!';\n\nconst panelDefaults = {\n  composites: [],\n  metricCharacterReplacements: [],\n  // other style overrides\n  seriesOverrides: [],\n  thresholds: '0,10',\n  decimals: 2, // decimal precision\n  colors: [\n    'rgba(50, 172, 45, 0.97)',\n    'rgba(237, 129, 40, 0.89)',\n    'rgba(245, 54, 54, 0.9)'\n  ],\n  legend: {\n    show: true,\n    min: true,\n    max: true,\n    avg: true,\n    current: true,\n    total: true,\n    gradient: {\n      enabled: true,\n      show: true\n    }\n  },\n  maxDataPoints: 100,\n  mappingType: 1,\n  maxWidth: false,\n  nullPointMode: 'connected',\n  format: 'none',\n  valueName: 'avg',\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\n  valueMaps: [\n    {\n      value: 'null',\n      op: '=',\n      text: 'N/A'\n    }\n  ],\n  content:\n    'graph LR\\n' +\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\n    'A --> C(Round Rect)\\n' +\n    'B --> D{Rhombus}\\n' +\n    'C --> D\\n',\n  mode: 'content', //allowed values: 'content' and 'url'\n  mermaidServiceUrl: '',\n  init: {\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\n    cloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\n    flowchart: {\n      htmlLabels: true,\n      useMaxWidth: true\n    },\n    sequenceDiagram: {\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\n      actorMargin: 50, // - Margin between actors\n      width: 150, // - Width of actor boxes\n      height: 65, // - Height of actor boxes00000000001111\n      boxMargin: 10, // - Margin around l01oop boxes\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\n      noteMargin: 10, // - margin around notes\n      messageMargin: 35, // - Space between messages\n      mirrorActors: true, // - mirror actors under diagram\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\n      useMaxWidth: true // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\n    },\n    gantt: {\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\n      barHeight: 20, // - the height of the bars in the graph\n      barGap: 4, // - the margin between the different activities in the gantt diagram\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\n      fontSize: 11, // - font size ...\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\n      numberSectionStyles: 3 // - the number of alternating section styles\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\n\t\t\t\t[\n\t\t        // Within a day\n\t\t        ['%I:%M', function (d) {\n\t\t            return d.getHours();\n\t\t        }],\n\t\t        // Monday a week\n\t\t        ['w. %U', function (d) {\n\t\t            return d.getDay() == 1;\n\t\t        }],\n\t\t        // Day within a week (not monday)\n\t\t        ['%a %d', function (d) {\n\t\t            return d.getDay() && d.getDate() != 1;\n\t\t        }],\n\t\t        // within a month\n\t\t        ['%b %d', function (d) {\n\t\t            return d.getDate() != 1;\n\t\t        }],\n\t\t        // Month\n\t\t        ['%m-%y', function (d) {\n\t\t            return d.getMonth();\n\t\t        }]] **/\n    }\n    //classDiagram: {},\n    //info: {}\n  }\n};\n\nclass DiagramCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $sce, $http) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.$http = $http;\n    this.panel.graphId = 'diagram_' + this.panel.id;\n    this.containerDivId = 'container_' + this.panel.graphId;\n    this.$sce = $sce;\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.unitFormats = kbn.getUnitFormats();\n    this.error = false;\n    this.errorText = '';\n    this.initializeMermaid();\n    this.setupScrollToPanel();\n  }\n\n  initializeMermaid() {\n    mermaidAPI.initialize(this.panel.init);\n    mermaidAPI.parseError = this.handleParseError.bind(this);\n  }\n\n  setupScrollToPanel() {\n    function scrollToPanel(id) {\n      var $panelTitle = $('.panel-title-text').filter(function(index) {\n        return $(this).text() === id;\n      });\n      var $scrollCanvas = $('.scroll-canvas');\n      var newScrollTopPosition;\n\n      if (!$panelTitle.length) {\n        this.error = true;\n        this.errorText = this.$sce.trustAsHtml(\n          '<div class=\"alert alert-error diagram-alert\">The panel \"' +\n            id +\n            '\" does not exist</div>'\n        );\n\n        this.$scope.$apply();\n\n        setTimeout(\n          function() {\n            this.error = false;\n            this.errorText = '';\n\n            this.$scope.$apply();\n          }.bind(this),\n          2000\n        );\n\n        return;\n      }\n\n      newScrollTopPosition = $panelTitle.offset().top - 75;\n      $scrollCanvas.animate({ scrollTop: newScrollTopPosition });\n    }\n\n    window.scrollToPanel = scrollToPanel.bind(this);\n  }\n\n  handleParseError(err, hash) {\n    this.error = 'Failed to parse diagram definition';\n    this.errorText = this.$sce.trustAsHtml(\n      '<p>Diagram Definition:</p><pre>' + err + '</pre>'\n    );\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Diagram', diagramEditor, 2);\n    this.addEditorTab('Display', displayEditor, 3);\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\n  }\n\n  getDiagramContainer() {\n    return $(document.getElementById(this.containerDivId));\n  }\n\n  onDataReceived(dataList) {\n    console.debug('received data');\n    console.debug(dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    console.debug('mapped dataList to series');\n    console.debug(this.series);\n\n    var data = {};\n    this.setValues(data);\n    this.updateDiagram(data);\n    this.svgData = data;\n    this.render();\n  }\n\n  replaceMetricCharacters(metricName) {\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\n    if (typeof metricName !== 'string')\n      return 'DATASOURCE_SENT_INVALID_METRIC_TARGET';\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\n    for (var index in this.panel.metricCharacterReplacements) {\n      var replacement = this.panel.metricCharacterReplacements[index];\n      // start with a simple replacement\n      var pattern = replacement.replacementPattern;\n      // check if the pattern is empty\n      if (pattern.length === 0) continue;\n      // if it is a regex, convert\n      if (pattern[0] === '/') {\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\n      }\n      replacedText = replacedText.replace(pattern, replacement.replaceWithText);\n    }\n    return replacedText;\n  }\n\n  seriesHandler(seriesData) {\n    var alias = this.replaceMetricCharacters(seriesData.target);\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: alias,\n      unit: seriesData.unit\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    var datapoints = seriesData.datapoints || [];\n    if (datapoints && datapoints.length > 0) {\n      var last = datapoints[datapoints.length - 1][1];\n      var from = this.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n    return series;\n  } // End seriesHandler()\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(\n      this.panel.seriesOverrides,\n      override\n    );\n    this.refresh();\n  }\n\n  addComposite(composite) {\n    this.panel.composites.push(composite || {});\n  }\n  removeComposite(composite) {\n    this.panel.composites = _.without(this.panel.composites, composite);\n    this.refresh();\n  }\n  getSeriesNamesForComposites() {\n    return _.map(this.$scope.ctrl.series, function(series) {\n      return series.alias;\n    });\n  }\n\n  addMetricToComposite(composite) {\n    if (composite.metrics === undefined) {\n      composite.metrics = [{}];\n    } else {\n      composite.metrics.push({});\n    }\n    this.refresh();\n  }\n  removeMetricFromComposite(composite, metric) {\n    composite.metrics = _.without(composite.metrics, metric);\n    this.refresh();\n  }\n\n  addMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements.push(\n      replacement || {\n        replacementPattern: '',\n        replaceWithText: '_'\n      }\n    );\n  }\n  removeMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements = _.without(\n      this.panel.metricCharacterReplacements,\n      replacement\n    );\n    this.refresh();\n  }\n\n  updateThresholds() {\n    var thresholdCount = this.panel.thresholds.length;\n    var colorCount = this.panel.colors.length;\n    this.refresh();\n  }\n\n  changeColor(colorIndex, color) {\n    this.panel.colors[colorIndex] = color;\n  }\n\n  removeColor(colorIndex) {\n    this.panel.colors.splice(colorIndex, 1);\n  }\n\n  addColor() {\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  clearDiagram() {\n    $('#' + this.panel.graphId).remove();\n    this.svg = {};\n  }\n\n  updateDiagram(data) {\n    if (this.panel.content.length > 0) {\n      this.clearDiagram();\n\n      var mode = this.panel.mode;\n      var templatedURL = this.templateSrv.replace(\n        this.panel.mermaidServiceUrl,\n        this.panel.scopedVars\n      );\n\n      function updateDiagram_cont(_this, graphDefinition) {\n        // substitute values inside \"link text\"\n        // this will look for any composite prefixed with a # and substitute the value of the composite\n        // if a series alias is found, in the form #alias, the value will be substituted\n        // this allows link values to be displayed based on the metric\n        graphDefinition = _this.substituteHashPrefixedNotation(\n          graphDefinition,\n          data\n        );\n        graphDefinition = _this.templateSrv.replaceWithText(graphDefinition);\n        _this.diagramType = mermaidAPI.detectType(graphDefinition);\n        var diagramContainer = $(document.getElementById(_this.containerDivId));\n\n        var renderCallback = function(svgCode, bindFunctions) {\n          if (svgCode === '') {\n            diagramContainer.html('There was a problem rendering the graph');\n          } else {\n            diagramContainer.html(svgCode);\n            bindFunctions(diagramContainer[0]);\n          }\n        };\n        // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n        mermaidAPI.render(_this.panel.graphId, graphDefinition, renderCallback);\n      }\n\n      if (mode == 'url') {\n        var _this = this;\n        this.$http({\n          method: 'GET',\n          url: templatedURL\n        }).then(\n          function successCallback(response) {\n            //the response must have text/plain content-type\n            // console.info(response.data);\n            updateDiagram_cont.call(_this, response.data);\n          },\n          function errorCallback(response) {\n            console.warn('error', response);\n          }\n        );\n      } else {\n        updateDiagram_cont(this, this.panel.content);\n      }\n    }\n  } // End updateDiagram()\n\n  /**\n   * substitute values inside \"link text\"\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\n   * if a series alias is found, in the form #alias, the value will be substituted\n   * this allows link values to be displayed based on the metric\n   *\n   * Prefix Modifier For Composites\n   *   # Raw Value of Series\n   *   ! Raw Value plus Metric Name\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\n   *\n   * Prefix Modifier For Series\n   *   # Raw Value of Series\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\n   * @param  {[Array]} data [Series Data]\n   * @return {[String]} [Modified Graph Definition]\n   */\n  substituteHashPrefixedNotation(graphDefinition, data) {\n    // inspect the string, locate all # prefixed items, and replace them with the value\n    // of the series. If no matching series is found, leave it alone\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\n    if (matches === null) return graphDefinition;\n    // check if there is a composite with a matching name\n    for (var i = 0; i < matches.length; i++) {\n      var aMatch = matches[i];\n      var valueType = aMatch[0];\n      aMatch = aMatch.substring(1);\n      // check composites first\n      for (var j = 0; j < this.panel.composites.length; j++) {\n        var aComposite = this.panel.composites[j];\n        if (aComposite.name === aMatch) {\n          // found matching composite, get the valueFormatted\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[aComposite.name].value;\n              graphDefinition = graphDefinition.replace(\n                '#' + aMatch,\n                displayedValue\n              );\n              break;\n            case '!':\n              displayedValue =\n                data[aComposite.name].valueRawFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace(\n                '!' + aMatch,\n                displayedValue\n              );\n              break;\n            case '@':\n              displayedValue = data[aComposite.name].valueFormatted;\n              graphDefinition = graphDefinition.replace(\n                '@' + aMatch,\n                displayedValue\n              );\n              break;\n            case '&':\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace(\n                '&' + aMatch,\n                displayedValue\n              );\n              break;\n          }\n        }\n      }\n      // next check series\n      for (var k = 0; k < this.series.length; k++) {\n        var seriesItem = this.series[k];\n        if (seriesItem.alias === aMatch) {\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[seriesItem.alias].value;\n              graphDefinition = graphDefinition.replace(\n                '#' + aMatch,\n                displayedValue\n              );\n              break;\n            case '@':\n              displayedValue = data[seriesItem.alias].valueFormatted;\n              graphDefinition = graphDefinition.replace(\n                '@' + aMatch,\n                displayedValue\n              );\n              break;\n          }\n        }\n      }\n    }\n    return graphDefinition;\n  }\n\n  renderDiagram(data, graphDefinition) {\n    console.debug(graphDefinition);\n    graphDefinition = this.templateSrv.replace(graphDefinition);\n    console.debug(graphDefinition);\n    this.diagramType = mermaidAPI.detectType(graphDefinition);\n    var diagramContainer = $(document.getElementById(this.containerDivId));\n\n    var renderCallback = function(svgCode, bindFunctions) {\n      if (svgCode == '') {\n        diagramContainer.html('There was a problem rendering the graph');\n      } else {\n        diagramContainer.html(svgCode);\n        bindFunctions(diagramContainer[0]);\n      }\n    };\n    // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n    mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\n    this.svgData = data;\n    this.render();\n  }\n\n  setValues(data) {\n    if (this.series && this.series.length > 0) {\n      for (var i = 0; i < this.series.length; i++) {\n        var seriesItem = this.series[i];\n        console.debug('setting values for series');\n        console.debug(seriesItem);\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\n        var lastPoint = _.last(seriesItem.datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueRounded = 0;\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\n        } else if (_.isString(lastValue)) {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\n          data[seriesItem.alias].valueRounded = 0;\n        } else {\n          data[seriesItem.alias].value =\n            seriesItem.stats[data[seriesItem.alias].valueName];\n          var decimalInfo = this.getDecimalsForValue(\n            data[seriesItem.alias].value\n          );\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\n          // put the value in quotes to escape \"most\" special characters\n          data[seriesItem.alias].valueFormatted = formatFunc(\n            data[seriesItem.alias].value,\n            decimalInfo.decimals,\n            decimalInfo.scaledDecimals\n          );\n          data[seriesItem.alias].valueRounded = kbn.roundValue(\n            data[seriesItem.alias].value,\n            decimalInfo.decimals\n          );\n        }\n        if (this.panel.legend.gradient.enabled) {\n          data[seriesItem.alias].color = this.getGradientForValue(\n            data[seriesItem.alias].colorData,\n            data[seriesItem.alias].value\n          );\n        } else {\n          data[seriesItem.alias].color = getColorForValue(\n            data[seriesItem.alias].colorData,\n            data[seriesItem.alias].value\n          );\n        }\n      }\n    }\n    // now add the composites to data\n    for (var i = 0; i < this.panel.composites.length; i++) {\n      var aComposite = this.panel.composites[i];\n      var currentWorstSeries = null;\n      var currentWorstSeriesName = null;\n      for (var j = 0; j < aComposite.metrics.length; j++) {\n        var aMetric = aComposite.metrics[j];\n        var seriesName = aMetric.seriesName;\n        // make sure we have a match\n        if (!data.hasOwnProperty(seriesName)) continue;\n        var seriesItem = data[seriesName];\n        // add the name of the series Item\n        seriesItem.nameOfMetric = seriesName;\n        // check colorData thresholds\n        if (currentWorstSeries === null) {\n          currentWorstSeries = seriesItem;\n          currentWorstSeriesName = seriesItem.nameOfMetric;\n        } else {\n          currentWorstSeries = this.getWorstSeries(\n            currentWorstSeries,\n            seriesItem\n          );\n          currentWorstSeriesName = currentWorstSeries.nameOfMetric;\n        }\n        delete seriesItem.nameOfMetric;\n      }\n      // Prefix the valueFormatted with the actual metric name\n      if (currentWorstSeries !== null) {\n        currentWorstSeries.valueFormattedWithPrefix =\n          currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n        currentWorstSeries.valueRawFormattedWithPrefix =\n          currentWorstSeriesName + ': ' + currentWorstSeries.value;\n        // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n        // now push the composite into data\n        data[aComposite.name] = currentWorstSeries;\n      }\n    }\n  } // End setValues()\n\n  getWorstSeries(series1, series2) {\n    var worstSeries = series1;\n    var series1thresholdLevel = this.getThresholdLevel(series1);\n    var series2thresholdLevel = this.getThresholdLevel(series2);\n    console.log('Series1 threshold level: ' + series1thresholdLevel);\n    console.log('Series2 threshold level: ' + series2thresholdLevel);\n    if (series2thresholdLevel > series1thresholdLevel) {\n      // series2 has higher threshold violation\n      worstSeries = series2;\n    }\n    return worstSeries;\n  }\n\n  // returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\n  getThresholdLevel(series) {\n    // default to ok\n    var thresholdLevel = 0;\n    var value = series.value;\n    var thresholds = series.colorData.thresholds;\n    // if no thresholds are defined, return 0\n    if (thresholds === undefined) {\n      return thresholdLevel;\n    }\n    // make sure thresholds is an array of size 2\n    if (thresholds.length !== 2) {\n      return thresholdLevel;\n    }\n    if (value >= thresholds[0]) {\n      // value is equal or greater than first threshold\n      thresholdLevel = 1;\n    }\n    if (value >= thresholds[1]) {\n      // value is equal or greater than second threshold\n      thresholdLevel = 2;\n    }\n    return thresholdLevel;\n  }\n\n  getGradientForValue(data, value) {\n    console.debug('Getting gradient for value');\n    console.debug(data);\n    console.debug(value);\n    var min = Math.min.apply(Math, data.thresholds);\n    var max = Math.max.apply(Math, data.thresholds);\n    var absoluteDistance = max - min;\n    var valueDistanceFromMin = value - min;\n    var xPercent = valueDistanceFromMin / absoluteDistance;\n    // Get the smaller number to clamp at 0.999 max\n    xPercent = Math.min(0.999, xPercent);\n    // Get the larger number to clamp at 0.001 min\n    xPercent = Math.max(0.001, xPercent);\n    if (data.invertColors) {\n      xPercent = 1 - xPercent;\n    }\n\n    return getColorByXPercentage(this.canvas, xPercent);\n  }\n\n  applyOverrides(seriesItemAlias) {\n    var seriesItem = {},\n      colorData = {},\n      overrides = {};\n\n    console.debug('applying overrides for seriesItem');\n    console.debug(seriesItemAlias);\n    console.debug(this.panel.seriesOverrides);\n    for (var i = 0; i <= this.panel.seriesOverrides.length; i++) {\n      console.debug('comparing:');\n      console.debug(this.panel.seriesOverrides[i]);\n\n      if (this.panel.seriesOverrides[i]) {\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\n        var matches = seriesItemAlias.match(regex);\n        if (matches && matches.length > 0) {\n          overrides = this.panel.seriesOverrides[i];\n        }\n      }\n    }\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds)\n      .split(',')\n      .map(function(strVale) {\n        return Number(strVale.trim());\n      });\n    colorData.colorMap = this.panel.colors.slice();\n    colorData.invertColors = overrides.invertColors || false;\n    if (colorData.invertColors) {\n      colorData.colorMap.reverse();\n    }\n    seriesItem.colorData = colorData;\n\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\n\n    seriesItem.format = overrides.unitFormat || this.panel.format;\n    return seriesItem;\n  }\n\n  invertColorOrder() {\n    this.panel.colors.reverse();\n    this.refresh();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals =\n      result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var templateSrv = this.templateSrv;\n    var diagramElement = elem.find('.diagram');\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\n    console.debug('found diagramContainer');\n    console.debug(diagramContainer);\n    elem.css('height', ctrl.height + 'px');\n\n    var canvas = elem.find('.canvas')[0];\n    ctrl.canvas = canvas;\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\n\n    function render() {\n      setElementHeight();\n      updateCanvasStyle();\n      updateStyle();\n    }\n\n    function updateCanvasStyle() {\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\n      var canvasContext = canvas.getContext('2d');\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\n        var currentColor = ctrl.panel.colors[i];\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\n      }\n      canvasContext.fillStyle = grd;\n      canvasContext.fillRect(0, 0, canvas.width, 3);\n      ctrl.canvasContext = canvasContext;\n\n      gradientValueMax.innerText = Math.max.apply(\n        Math,\n        ctrl.panel.thresholds.split(',')\n      );\n      gradientValueMin.innerText = Math.min.apply(\n        Math,\n        ctrl.panel.thresholds.split(',')\n      );\n    }\n\n    function setElementHeight() {\n      //diagramContainer.css('height', ctrl.height + 'px');\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n\n    function updateStyle() {\n      var data = ctrl.svgData;\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\n      console.debug('updating svg style');\n      var svg = $(document.getElementById(ctrl.panel.graphId));\n      $(svg).css('min-width', $(svg).css('max-width'));\n      if (ctrl.panel.maxWidth) {\n        $(svg).css('max-width', '100%');\n      }\n\n      if (svg[0] === undefined) {\n        return;\n      }\n\n      for (var key in data) {\n        var seriesItem = data[key];\n\n        // Find nodes by ID if we can\n        //console.info('finding targetElement');\n        var targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\n\n        if (targetElement[0][0] !== null) {\n          // probably a flowchart\n          targetElement\n            .selectAll('rect,circle,polygon')\n            .style('fill', seriesItem.color);\n\n          var div = targetElement.select('div');\n          var fo = targetElement.select('foreignObject');\n          // make foreign object element taller to accomdate value in FireFox/IE\n          fo.attr('height', 45);\n          // Add value text\n          var p = div.append('p');\n          p.classed('diagram-value');\n          p.style('background-color', seriesItem.color);\n          p.html(seriesItem.valueFormatted);\n        } else {\n          console.debug('finding element that contains id: ' + key);\n          // maybe a flowchart with an alias text node\n          targetElement = $(svg)\n            .find('div:contains(\"' + key + '\")')\n            .filter(function() {\n              // Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\n              return $(this).attr('id') === key;\n            });\n          if (targetElement.length > 0) {\n            targetElement\n              .parents('.node')\n              .find('rect, circle, polygon')\n              .css('fill', seriesItem.color);\n            // make foreign object element taller to accomdate value in FireFox/IE\n            targetElement\n              .parents('.node')\n              .find('foreignObject')\n              .attr('height', 45);\n            // for edge matches\n            var edgeElement = targetElement.parent().find('.edgeLabel');\n            if (edgeElement.length > 0) {\n              edgeElement.css('background-color', 'transparent');\n              edgeElement\n                .append('<br/>' + seriesItem.valueFormatted)\n                .addClass('diagram-value');\n              edgeElement\n                .parent('div')\n                .css('text-align', 'center')\n                .css('background-color', seriesItem.color);\n            } else {\n              var dElement = d3.select(targetElement[0]);\n              // Add value text\n              var p = dElement.append('p');\n              p.classed('diagram-value');\n              p.style('background-color', seriesItem.color);\n              p.html(seriesItem.valueFormatted);\n            }\n          } else {\n            targetElement = $(svg).find('text:contains(\"' + key + '\")'); // sequence diagram, gantt ?\n            if (targetElement.length === 0) {\n              console.debug(\n                'couldnt not find a diagram node with id/text: ' + key\n              );\n              continue;\n            }\n            // for node matches\n            targetElement\n              .parent()\n              .find('rect, circle, polygon')\n              .css('fill', seriesItem.color);\n            targetElement.append('\\n' + seriesItem.valueFormatted);\n          }\n        }\n\n        console.debug(targetElement);\n        console.debug('set nodes:' + key + ' to color:' + seriesItem.color);\n      }\n      //return $(svg).html();\n    } // End updateStyle()\n  }\n  // End Class\n}\n\nfunction getColorForValue(data, value) {\n  console.debug('Getting color for value');\n  console.debug(data);\n  console.debug(value);\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nfunction getColorByXPercentage(canvas, xPercent) {\n  var x = canvas.width * xPercent;\n  var context = canvas.getContext('2d');\n  var p = context.getImageData(x, 1, 1, 1).data;\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\n  return color;\n}\n\nDiagramCtrl.templateUrl = 'module.html';\n\nexport { DiagramCtrl, DiagramCtrl as MetricsPanelCtrl };\n"]}